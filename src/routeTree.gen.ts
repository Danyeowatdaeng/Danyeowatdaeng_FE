/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProfileIndexRouteImport } from './routes/profile/index'
import { Route as PlaceIndexRouteImport } from './routes/place/index'
import { Route as MypetIndexRouteImport } from './routes/mypet/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as LandingIndexRouteImport } from './routes/landing/index'
import { Route as CartIndexRouteImport } from './routes/cart/index'
import { Route as ReservationPlaceIdRouteImport } from './routes/reservation.$placeId'
import { Route as ProfileStampRouteImport } from './routes/profile/stamp'
import { Route as ProfilePointRouteImport } from './routes/profile/point'
import { Route as ProfileCouponRouteImport } from './routes/profile/coupon'
import { Route as MypetWalkRouteImport } from './routes/mypet/walk'
import { Route as MypetQuestRouteImport } from './routes/mypet/quest'
import { Route as LoginMakeCharacterRouteImport } from './routes/login/makeCharacter'
import { Route as LoginCheckPermissionRouteImport } from './routes/login/checkPermission'
import { Route as LoginCheckCharacterRouteImport } from './routes/login/checkCharacter'
import { Route as MypetDiaryIndexRouteImport } from './routes/mypet/diary/index'
import { Route as ReservationPlaceIdCompleteRouteImport } from './routes/reservation.$placeId.complete'
import { Route as PlacePlaceIdReviewRouteImport } from './routes/place/$placeId/review'
import { Route as MypetDiaryIdRouteImport } from './routes/mypet/diary/$id'
import { Route as LandingCategoryCategoryRouteImport } from './routes/landing/category/$category'
import { Route as CartGroupGroupIdRouteImport } from './routes/cart/group.$groupId'

const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlaceIndexRoute = PlaceIndexRouteImport.update({
  id: '/place/',
  path: '/place/',
  getParentRoute: () => rootRouteImport,
} as any)
const MypetIndexRoute = MypetIndexRouteImport.update({
  id: '/mypet/',
  path: '/mypet/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingIndexRoute = LandingIndexRouteImport.update({
  id: '/landing/',
  path: '/landing/',
  getParentRoute: () => rootRouteImport,
} as any)
const CartIndexRoute = CartIndexRouteImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReservationPlaceIdRoute = ReservationPlaceIdRouteImport.update({
  id: '/reservation/$placeId',
  path: '/reservation/$placeId',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileStampRoute = ProfileStampRouteImport.update({
  id: '/profile/stamp',
  path: '/profile/stamp',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfilePointRoute = ProfilePointRouteImport.update({
  id: '/profile/point',
  path: '/profile/point',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileCouponRoute = ProfileCouponRouteImport.update({
  id: '/profile/coupon',
  path: '/profile/coupon',
  getParentRoute: () => rootRouteImport,
} as any)
const MypetWalkRoute = MypetWalkRouteImport.update({
  id: '/mypet/walk',
  path: '/mypet/walk',
  getParentRoute: () => rootRouteImport,
} as any)
const MypetQuestRoute = MypetQuestRouteImport.update({
  id: '/mypet/quest',
  path: '/mypet/quest',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginMakeCharacterRoute = LoginMakeCharacterRouteImport.update({
  id: '/login/makeCharacter',
  path: '/login/makeCharacter',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginCheckPermissionRoute = LoginCheckPermissionRouteImport.update({
  id: '/login/checkPermission',
  path: '/login/checkPermission',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginCheckCharacterRoute = LoginCheckCharacterRouteImport.update({
  id: '/login/checkCharacter',
  path: '/login/checkCharacter',
  getParentRoute: () => rootRouteImport,
} as any)
const MypetDiaryIndexRoute = MypetDiaryIndexRouteImport.update({
  id: '/mypet/diary/',
  path: '/mypet/diary/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReservationPlaceIdCompleteRoute =
  ReservationPlaceIdCompleteRouteImport.update({
    id: '/complete',
    path: '/complete',
    getParentRoute: () => ReservationPlaceIdRoute,
  } as any)
const PlacePlaceIdReviewRoute = PlacePlaceIdReviewRouteImport.update({
  id: '/place/$placeId/review',
  path: '/place/$placeId/review',
  getParentRoute: () => rootRouteImport,
} as any)
const MypetDiaryIdRoute = MypetDiaryIdRouteImport.update({
  id: '/mypet/diary/$id',
  path: '/mypet/diary/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingCategoryCategoryRoute = LandingCategoryCategoryRouteImport.update({
  id: '/landing/category/$category',
  path: '/landing/category/$category',
  getParentRoute: () => rootRouteImport,
} as any)
const CartGroupGroupIdRoute = CartGroupGroupIdRouteImport.update({
  id: '/cart/group/$groupId',
  path: '/cart/group/$groupId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/login/checkCharacter': typeof LoginCheckCharacterRoute
  '/login/checkPermission': typeof LoginCheckPermissionRoute
  '/login/makeCharacter': typeof LoginMakeCharacterRoute
  '/mypet/quest': typeof MypetQuestRoute
  '/mypet/walk': typeof MypetWalkRoute
  '/profile/coupon': typeof ProfileCouponRoute
  '/profile/point': typeof ProfilePointRoute
  '/profile/stamp': typeof ProfileStampRoute
  '/reservation/$placeId': typeof ReservationPlaceIdRouteWithChildren
  '/cart': typeof CartIndexRoute
  '/landing': typeof LandingIndexRoute
  '/login': typeof LoginIndexRoute
  '/mypet': typeof MypetIndexRoute
  '/place': typeof PlaceIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/cart/group/$groupId': typeof CartGroupGroupIdRoute
  '/landing/category/$category': typeof LandingCategoryCategoryRoute
  '/mypet/diary/$id': typeof MypetDiaryIdRoute
  '/place/$placeId/review': typeof PlacePlaceIdReviewRoute
  '/reservation/$placeId/complete': typeof ReservationPlaceIdCompleteRoute
  '/mypet/diary': typeof MypetDiaryIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/login/checkCharacter': typeof LoginCheckCharacterRoute
  '/login/checkPermission': typeof LoginCheckPermissionRoute
  '/login/makeCharacter': typeof LoginMakeCharacterRoute
  '/mypet/quest': typeof MypetQuestRoute
  '/mypet/walk': typeof MypetWalkRoute
  '/profile/coupon': typeof ProfileCouponRoute
  '/profile/point': typeof ProfilePointRoute
  '/profile/stamp': typeof ProfileStampRoute
  '/reservation/$placeId': typeof ReservationPlaceIdRouteWithChildren
  '/cart': typeof CartIndexRoute
  '/landing': typeof LandingIndexRoute
  '/login': typeof LoginIndexRoute
  '/mypet': typeof MypetIndexRoute
  '/place': typeof PlaceIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/cart/group/$groupId': typeof CartGroupGroupIdRoute
  '/landing/category/$category': typeof LandingCategoryCategoryRoute
  '/mypet/diary/$id': typeof MypetDiaryIdRoute
  '/place/$placeId/review': typeof PlacePlaceIdReviewRoute
  '/reservation/$placeId/complete': typeof ReservationPlaceIdCompleteRoute
  '/mypet/diary': typeof MypetDiaryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/login/checkCharacter': typeof LoginCheckCharacterRoute
  '/login/checkPermission': typeof LoginCheckPermissionRoute
  '/login/makeCharacter': typeof LoginMakeCharacterRoute
  '/mypet/quest': typeof MypetQuestRoute
  '/mypet/walk': typeof MypetWalkRoute
  '/profile/coupon': typeof ProfileCouponRoute
  '/profile/point': typeof ProfilePointRoute
  '/profile/stamp': typeof ProfileStampRoute
  '/reservation/$placeId': typeof ReservationPlaceIdRouteWithChildren
  '/cart/': typeof CartIndexRoute
  '/landing/': typeof LandingIndexRoute
  '/login/': typeof LoginIndexRoute
  '/mypet/': typeof MypetIndexRoute
  '/place/': typeof PlaceIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/cart/group/$groupId': typeof CartGroupGroupIdRoute
  '/landing/category/$category': typeof LandingCategoryCategoryRoute
  '/mypet/diary/$id': typeof MypetDiaryIdRoute
  '/place/$placeId/review': typeof PlacePlaceIdReviewRoute
  '/reservation/$placeId/complete': typeof ReservationPlaceIdCompleteRoute
  '/mypet/diary/': typeof MypetDiaryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat'
    | '/login/checkCharacter'
    | '/login/checkPermission'
    | '/login/makeCharacter'
    | '/mypet/quest'
    | '/mypet/walk'
    | '/profile/coupon'
    | '/profile/point'
    | '/profile/stamp'
    | '/reservation/$placeId'
    | '/cart'
    | '/landing'
    | '/login'
    | '/mypet'
    | '/place'
    | '/profile'
    | '/cart/group/$groupId'
    | '/landing/category/$category'
    | '/mypet/diary/$id'
    | '/place/$placeId/review'
    | '/reservation/$placeId/complete'
    | '/mypet/diary'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/chat'
    | '/login/checkCharacter'
    | '/login/checkPermission'
    | '/login/makeCharacter'
    | '/mypet/quest'
    | '/mypet/walk'
    | '/profile/coupon'
    | '/profile/point'
    | '/profile/stamp'
    | '/reservation/$placeId'
    | '/cart'
    | '/landing'
    | '/login'
    | '/mypet'
    | '/place'
    | '/profile'
    | '/cart/group/$groupId'
    | '/landing/category/$category'
    | '/mypet/diary/$id'
    | '/place/$placeId/review'
    | '/reservation/$placeId/complete'
    | '/mypet/diary'
  id:
    | '__root__'
    | '/'
    | '/chat'
    | '/login/checkCharacter'
    | '/login/checkPermission'
    | '/login/makeCharacter'
    | '/mypet/quest'
    | '/mypet/walk'
    | '/profile/coupon'
    | '/profile/point'
    | '/profile/stamp'
    | '/reservation/$placeId'
    | '/cart/'
    | '/landing/'
    | '/login/'
    | '/mypet/'
    | '/place/'
    | '/profile/'
    | '/cart/group/$groupId'
    | '/landing/category/$category'
    | '/mypet/diary/$id'
    | '/place/$placeId/review'
    | '/reservation/$placeId/complete'
    | '/mypet/diary/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatRoute: typeof ChatRoute
  LoginCheckCharacterRoute: typeof LoginCheckCharacterRoute
  LoginCheckPermissionRoute: typeof LoginCheckPermissionRoute
  LoginMakeCharacterRoute: typeof LoginMakeCharacterRoute
  MypetQuestRoute: typeof MypetQuestRoute
  MypetWalkRoute: typeof MypetWalkRoute
  ProfileCouponRoute: typeof ProfileCouponRoute
  ProfilePointRoute: typeof ProfilePointRoute
  ProfileStampRoute: typeof ProfileStampRoute
  ReservationPlaceIdRoute: typeof ReservationPlaceIdRouteWithChildren
  CartIndexRoute: typeof CartIndexRoute
  LandingIndexRoute: typeof LandingIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  MypetIndexRoute: typeof MypetIndexRoute
  PlaceIndexRoute: typeof PlaceIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  CartGroupGroupIdRoute: typeof CartGroupGroupIdRoute
  LandingCategoryCategoryRoute: typeof LandingCategoryCategoryRoute
  MypetDiaryIdRoute: typeof MypetDiaryIdRoute
  PlacePlaceIdReviewRoute: typeof PlacePlaceIdReviewRoute
  MypetDiaryIndexRoute: typeof MypetDiaryIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/place/': {
      id: '/place/'
      path: '/place'
      fullPath: '/place'
      preLoaderRoute: typeof PlaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mypet/': {
      id: '/mypet/'
      path: '/mypet'
      fullPath: '/mypet'
      preLoaderRoute: typeof MypetIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/landing/': {
      id: '/landing/'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reservation/$placeId': {
      id: '/reservation/$placeId'
      path: '/reservation/$placeId'
      fullPath: '/reservation/$placeId'
      preLoaderRoute: typeof ReservationPlaceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/stamp': {
      id: '/profile/stamp'
      path: '/profile/stamp'
      fullPath: '/profile/stamp'
      preLoaderRoute: typeof ProfileStampRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/point': {
      id: '/profile/point'
      path: '/profile/point'
      fullPath: '/profile/point'
      preLoaderRoute: typeof ProfilePointRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/coupon': {
      id: '/profile/coupon'
      path: '/profile/coupon'
      fullPath: '/profile/coupon'
      preLoaderRoute: typeof ProfileCouponRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mypet/walk': {
      id: '/mypet/walk'
      path: '/mypet/walk'
      fullPath: '/mypet/walk'
      preLoaderRoute: typeof MypetWalkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mypet/quest': {
      id: '/mypet/quest'
      path: '/mypet/quest'
      fullPath: '/mypet/quest'
      preLoaderRoute: typeof MypetQuestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/makeCharacter': {
      id: '/login/makeCharacter'
      path: '/login/makeCharacter'
      fullPath: '/login/makeCharacter'
      preLoaderRoute: typeof LoginMakeCharacterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/checkPermission': {
      id: '/login/checkPermission'
      path: '/login/checkPermission'
      fullPath: '/login/checkPermission'
      preLoaderRoute: typeof LoginCheckPermissionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/checkCharacter': {
      id: '/login/checkCharacter'
      path: '/login/checkCharacter'
      fullPath: '/login/checkCharacter'
      preLoaderRoute: typeof LoginCheckCharacterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mypet/diary/': {
      id: '/mypet/diary/'
      path: '/mypet/diary'
      fullPath: '/mypet/diary'
      preLoaderRoute: typeof MypetDiaryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reservation/$placeId/complete': {
      id: '/reservation/$placeId/complete'
      path: '/complete'
      fullPath: '/reservation/$placeId/complete'
      preLoaderRoute: typeof ReservationPlaceIdCompleteRouteImport
      parentRoute: typeof ReservationPlaceIdRoute
    }
    '/place/$placeId/review': {
      id: '/place/$placeId/review'
      path: '/place/$placeId/review'
      fullPath: '/place/$placeId/review'
      preLoaderRoute: typeof PlacePlaceIdReviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mypet/diary/$id': {
      id: '/mypet/diary/$id'
      path: '/mypet/diary/$id'
      fullPath: '/mypet/diary/$id'
      preLoaderRoute: typeof MypetDiaryIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/landing/category/$category': {
      id: '/landing/category/$category'
      path: '/landing/category/$category'
      fullPath: '/landing/category/$category'
      preLoaderRoute: typeof LandingCategoryCategoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart/group/$groupId': {
      id: '/cart/group/$groupId'
      path: '/cart/group/$groupId'
      fullPath: '/cart/group/$groupId'
      preLoaderRoute: typeof CartGroupGroupIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface ReservationPlaceIdRouteChildren {
  ReservationPlaceIdCompleteRoute: typeof ReservationPlaceIdCompleteRoute
}

const ReservationPlaceIdRouteChildren: ReservationPlaceIdRouteChildren = {
  ReservationPlaceIdCompleteRoute: ReservationPlaceIdCompleteRoute,
}

const ReservationPlaceIdRouteWithChildren =
  ReservationPlaceIdRoute._addFileChildren(ReservationPlaceIdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatRoute: ChatRoute,
  LoginCheckCharacterRoute: LoginCheckCharacterRoute,
  LoginCheckPermissionRoute: LoginCheckPermissionRoute,
  LoginMakeCharacterRoute: LoginMakeCharacterRoute,
  MypetQuestRoute: MypetQuestRoute,
  MypetWalkRoute: MypetWalkRoute,
  ProfileCouponRoute: ProfileCouponRoute,
  ProfilePointRoute: ProfilePointRoute,
  ProfileStampRoute: ProfileStampRoute,
  ReservationPlaceIdRoute: ReservationPlaceIdRouteWithChildren,
  CartIndexRoute: CartIndexRoute,
  LandingIndexRoute: LandingIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  MypetIndexRoute: MypetIndexRoute,
  PlaceIndexRoute: PlaceIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  CartGroupGroupIdRoute: CartGroupGroupIdRoute,
  LandingCategoryCategoryRoute: LandingCategoryCategoryRoute,
  MypetDiaryIdRoute: MypetDiaryIdRoute,
  PlacePlaceIdReviewRoute: PlacePlaceIdReviewRoute,
  MypetDiaryIndexRoute: MypetDiaryIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
